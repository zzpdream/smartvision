project(':mws-web') {

    apply plugin: 'war'
    dependencies {
        compile fileTree(include: '*.jar', dir: 'src/libs')
        compile project(':modules:core')
        compile project(':modules:model')
        compile project(':modules:service')
        compile("org.springframework:spring-webmvc:${springLastVersion}")
        compile "redis.clients:jedis:${jedisVersion}"
        compile("org.springframework.data:spring-data-redis:${springredisVersion}") {
            transitive = false
        }
        compile "com.h2database:h2:${h2Version}"
        compile "org.hibernate:hibernate-core:${hibernateVersion}"
        compile "org.hibernate:hibernate-entitymanager:${hibernateVersion}"
        compile "org.hibernate:hibernate-validator:5.2.1.Final"
        compile "org.hibernate:hibernate-ehcache:${hibernateVersion}"
        compile "ch.qos.logback:logback-classic:${logbackVersion}"
        compile "org.aspectj:aspectjweaver:1.8.1"
        compile "org.apache.httpcomponents:httpclient:${httpclientVersion}"
        compile "commons-fileupload:commons-fileupload:1.3.1"
        compile "commons-io:commons-io:2.3"
        compile "org.apache.mina:mina-core:2.0.13"
        compile "org.apache.mina:mina-integration-beans:2.0.13"
        compile "org.apache.mina:mina-integration-spring:1.1.7"
        compile 'io.netty:netty-all:5.0.0.Alpha2'
        compile "org.apache.httpcomponents:httpclient:${httpclientVersion}"
        compile "org.apache.httpcomponents:httpmime:${httpclientVersion}"
        compile "opensymphony:sitemesh:2.4.2"
        compile "javax.servlet:jstl:1.2"
        compile "javax.servlet.jsp:jsp-api:2.2.1-b03"
        compile "javax.servlet:javax.servlet-api:3.1.0"
        compile "org.apache.shiro:shiro-ehcache:1.2.3"
        compile "org.apache.shiro:shiro-spring:1.2.3"
        compile "net.sf.ehcache:ehcache-core:${encacheVersion}"
        compile "org.jolokia:jolokia:1.2.2"
        compile "org.apache.ant:ant:1.8.2"
        testCompile "org.mockito:mockito-all:1.9.5"
    }


    processResources {
        from('src/test/resources') {
            include 'application.development.properties'
        }
        filter(org.apache.tools.ant.filters.ReplaceTokens,
                tokens: loadGroovy())
    }
}